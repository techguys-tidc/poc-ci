name: CI
on:
  push:
    branches: [ "main" ]
jobs:  
    trivy:
      runs-on: ubuntu-20.04
#      permissions:
#        actions: read
#        contents: read
#        security-events: write
      permissions: write-all
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Kaniko build
          uses: aevea/action-kaniko@master
          with:
            image: jutiruud/test
            debug: true
            extra_args: "--tar-path=image.tar --no-push=true"
            
        - name: Run Trivy vulnerability scanner in tar mode
          uses: aquasecurity/trivy-action@master
          with:
      #      scan-type: 'fs'
      #      scan-ref: '.'
            input: image.tar
            output: trivy-report.html
            template: "@.github/report-template.html"
            format: template

        - name: Kaniko build
          uses: aevea/action-kaniko@master
          with:
            image: ${{secrets.registry_team}}/${{secrets.registry_project}}
            registry: ${{ secrets.registry_endpoint }}
            username: ${{ secrets.registry_username }}
            password: ${{ secrets.registry_password }}
            tag: ${{ needs.setenv.outputs.tag_name }}
   #         extra_args: --tar-path image.tar --no-push
            
#        - name: Login Docker
  #        run: echo "${{ secrets.REPOSITORY_PASS }}" | docker login "${{ secrets.REGISTRY_ENDPOINT }}" -u '${{ secrets.REPOSITORY_USER }}' --password-stdin
  #      
   #     - name: Docker pull
   #       run: docker pull tcr.tks.trueidc.com/crm/crm-backend:vulner
   #       
   ###     - name: Run Trivy vulnerability scanner
      #    uses: aquasecurity/trivy-action@master
      #    with:
      #      image-ref: tcr.tks.trueidc.com/crm/crm-backend:vulner
          #  image-ref: '${{ secrets.registry_endpoint }}/${{secrets.registry_team}}/${{secrets.registry_project}}:main'
     #       format: 'sarif'
     #       output: 'trivy-results.sarif'

            
        - name: list file
          run: ls -l;pwd
          
  #      - name: Upload Trivy scan results to GitHub Security tab
  #        id: run-analysis
  #        uses: github/codeql-action/upload-sarif@v2
  #        with:
  #          sarif_file: 'trivy-results.sarif'
            
        - name: Upload SARIF as an Artifact
          uses: actions/upload-artifact@v2
          with:
            name: sarif-file
            path: 'trivy-report.html'
